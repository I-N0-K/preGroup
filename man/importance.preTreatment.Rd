% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preGroup.r, R/preTreatment.r
\name{importance.preTreatment}
\alias{importance.preTreatment}
\alias{importance}
\title{Calculate Variable Importances for a preTreatment Model}
\usage{
\method{importance}{preTreatment}(
  preTreatment_model,
  standardize = FALSE,
  global = TRUE,
  penalty.par.val = "lambda.1se",
  gamma = NULL,
  quantprobs = c(0.75, 1),
  round = NA,
  plot = TRUE,
  ylab = "Importance",
  main = "Variable importances",
  abbreviate = 10L,
  diag.xlab = TRUE,
  diag.xlab.hor = 0,
  diag.xlab.vert = 2,
  cex.axis = 1,
  legend = "topright",
  ...
)

\method{importance}{preTreatment}(
  preTreatment_model,
  standardize = FALSE,
  global = TRUE,
  penalty.par.val = "lambda.1se",
  gamma = NULL,
  quantprobs = c(0.75, 1),
  round = NA,
  plot = TRUE,
  ylab = "Importance",
  main = "Variable importances",
  abbreviate = 10L,
  diag.xlab = TRUE,
  diag.xlab.hor = 0,
  diag.xlab.vert = 2,
  cex.axis = 1,
  legend = "topright",
  ...
)
}
\arguments{
\item{preTreatment_model}{An object of class 'preTreatment'.}

\item{standardize}{Logical; if TRUE, importance scores are standardized.}

\item{global}{Logical; if TRUE, global importances are calculated, otherwise local importances are provided.}

\item{penalty.par.val}{A character string specifying the penalty parameter value to be used in calculation.}

\item{gamma}{The gamma parameter for regularization paths in models; if not NULL, it modifies the penalties.}

\item{quantprobs}{A numeric vector specifying the quantiles to be used in local importance calculation.}

\item{round}{Numeric; the number of decimal places to round the importances to (if NA, no rounding is performed).}

\item{plot}{Logical; if TRUE, a plot of the importances is generated.}

\item{ylab}{The y-axis label in the plot.}

\item{main}{The main title for the plot.}

\item{abbreviate}{An integer specifying how much to abbreviate variable names in the plot.}

\item{diag.xlab}{Logical; if TRUE, labels are diagonal on the x-axis of the plot.}

\item{diag.xlab.hor}{Horizontal adjustment for diagonal labels.}

\item{diag.xlab.vert}{Vertical adjustment for diagonal labels.}

\item{cex.axis}{The character expansion size for axis names.}

\item{legend}{A character string or logical; position of the legend in the plot or FALSE to exclude it.}

\item{...}{Additional arguments passed to underlying functions.}
}
\value{
A list containing the variable importances as data frames.

A list containing the variable importances as data frames.
}
\description{
Computes variable importances based on a preTreatment model, offering options for both global and local importance,
standardization of importances, and various additional parameters.

Computes variable importances based on a preTreatment model, offering options for both global and local importance,
standardization of importances, and various additional parameters.
}
\examples{
result <- importance(preTreatment_model)
set.seed(123)  # For reproducibility
# Number of rows
n <- 200

# Generate 5 binary variables
binary_vars <- as.data.frame(replicate(5, sample(0:1, n, replace = TRUE)))
names(binary_vars) <- paste0("X", 1:5)

# Generate 10 categorical variables with 3 levels each
categorical_vars <- as.data.frame(replicate(10, sample(letters[1:3], n, replace = TRUE)))
names(categorical_vars) <- paste0("X", 6:15)

# Generate 10 continuous variables
continuous_vars <- as.data.frame(replicate(10, rnorm(n)))
names(continuous_vars) <- paste0("X", 16:25)
# Combine all predictor variables
predictors <- cbind(binary_vars, categorical_vars, continuous_vars)
y <- with(predictors, {
  2 * sin(X16) + 3 * cos(X17) + X1 * X18^2 - X2 * X19 + X3 * X20^3 +
    as.numeric(X1 == 1 & X9 == "b") + as.numeric(X1 == 1 & X16 < 0) +
    as.numeric(X6 == "a") * X21 + as.numeric(X7 == "b") * X22 +
    as.numeric(X8 == "c") * X23 +
    25 * as.numeric(X8 == "c") + 2 * as.numeric(X9 == "b") + X16 + X18 + X19 + rnorm(n)  # Adding some noise
})
#Combine predictors and response into a single data frame
simdata1 <- data.frame(y = y, predictors)

result <- preTreatment(y ~ ., treatment_indicator = "X1", data = simdata1, alpha.mvs = c(0,1))

# Automatically plot the variable importaces
imp <- importance(result)

#Importances are stored in a data frame for customized plots if needed by users
imp
}
